{"title": "303. 区域和检索 - 数组不可变", "level": "简单", "description": "<p>给定一个整数数组 &nbsp;<em>nums</em>，求出数组从索引&nbsp;<em>i&nbsp;</em>到&nbsp;<em>j&nbsp;&nbsp;</em>(<em>i</em>&nbsp;≤&nbsp;<em>j</em>) 范围内元素的总和，包含&nbsp;<em>i,&nbsp; j&nbsp;</em>两点。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>给定 nums = [-2, 0, 3, -5, 2, -1]，求和函数为 sumRange()\n\nsumRange(0, 2) -&gt; 1\nsumRange(2, 5) -&gt; -1\nsumRange(0, 5) -&gt; -3</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>你可以假设数组不可变。</li>\n\t<li>会多次调用&nbsp;<em>sumRange</em>&nbsp;方法。</li>\n</ol>\n", "code": "class NumArray {\npublic:\n    NumArray(vector<int>& nums) {\n            }\n        int sumRange(int i, int j) {\n            }\n};\n /**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * int param_1 = obj->sumRange(i,j);\n */"}