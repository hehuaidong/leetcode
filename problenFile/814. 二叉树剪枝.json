{"title": "814. 二叉树剪枝", "level": "中等", "description": "<p>给定二叉树根结点&nbsp;<code>root</code>&nbsp;，此外树的每个结点的值要么是 0，要么是 1。</p>\n\n<p>返回移除了所有不包含 1 的子树的原二叉树。</p>\n\n<p>( 节点 X 的子树为 X 本身，以及所有 X 的后代。)</p>\n\n<pre><strong>示例1:</strong>\n<strong>输入:</strong> [1,null,0,0,1]\n<strong>输出: </strong>[1,null,0,null,1]\n \n<strong>解释:</strong> \n只有红色节点满足条件“所有不包含 1 的子树”。\n右图为返回的答案。\n\n<img style=\"width:450px\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_2.png\" alt=\"\">\n</pre>\n\n<pre><strong>示例2:</strong>\n<strong>输入:</strong> [1,0,1,0,0,0,1]\n<strong>输出: </strong>[1,null,1,null,1]\n\n\n<img style=\"width:450px\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/06/1028_1.png\" alt=\"\">\n</pre>\n\n<pre><strong>示例3:</strong>\n<strong>输入:</strong> [1,1,0,1,1,0,1,0]\n<strong>输出: </strong>[1,1,0,1,1,null,1]\n\n\n<img style=\"width:450px\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/04/05/1028.png\" alt=\"\">\n</pre>\n\n<p><strong>说明: </strong></p>\n\n<ul>\n\t<li>给定的二叉树最多有&nbsp;<code>100</code>&nbsp;个节点。</li>\n\t<li>每个节点的值只会为&nbsp;<code>0</code> 或&nbsp;<code>1</code>&nbsp;。</li>\n</ul>\n", "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* pruneTree(TreeNode* root) {\n            }\n};"}