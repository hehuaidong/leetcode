{"title": "225. 用队列实现栈", "level": "简单", "description": "<p>使用队列实现栈的下列操作：</p>\n\n<ul>\n\t<li>push(x) -- 元素 x 入栈</li>\n\t<li>pop() -- 移除栈顶元素</li>\n\t<li>top() -- 获取栈顶元素</li>\n\t<li>empty() -- 返回栈是否为空</li>\n</ul>\n\n<p><strong>注意:</strong></p>\n\n<ul>\n\t<li>你只能使用队列的基本操作-- 也就是&nbsp;<code>push to back</code>, <code>peek/pop from front</code>, <code>size</code>, 和&nbsp;<code>is empty</code>&nbsp;这些操作是合法的。</li>\n\t<li>你所使用的语言也许不支持队列。&nbsp;你可以使用 list 或者 deque（双端队列）来模拟一个队列&nbsp;, 只要是标准的队列操作即可。</li>\n\t<li>你可以假设所有操作都是有效的（例如, 对一个空的栈不会调用 pop 或者 top 操作）。</li>\n</ul>\n", "code": "class MyStack {\npublic:\n    /** Initialize your data structure here. */\n    MyStack() {\n            }\n        /** Push element x onto stack. */\n    void push(int x) {\n            }\n        /** Removes the element on top of the stack and returns that element. */\n    int pop() {\n            }\n        /** Get the top element. */\n    int top() {\n            }\n        /** Returns whether the stack is empty. */"}