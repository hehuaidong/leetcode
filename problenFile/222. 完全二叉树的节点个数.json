{"title": "222. 完全二叉树的节点个数", "level": "中等", "description": "<p>给出一个<strong>完全二叉树</strong>，求出该树的节点个数。</p>\n\n<p><strong>说明：</strong></p>\n\n<p><a href=\"https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin\">完全二叉树</a>的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 h 层，则该层包含 1~&nbsp;2<sup>h</sup>&nbsp;个节点。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> \n    1\n   / \\\n  2   3\n / \\  /\n4  5 6\n\n<strong>输出:</strong> 6</pre>\n", "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int countNodes(TreeNode* root) {\n            }\n};"}