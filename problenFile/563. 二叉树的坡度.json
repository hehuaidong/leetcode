{"title": "563. 二叉树的坡度", "level": "简单", "description": "<p>给定一个二叉树，计算<strong>整个树</strong>的坡度。</p>\n\n<p>一个树的<strong>节点的坡度</strong>定义即为，该节点左子树的结点之和和右子树结点之和的<strong>差的绝对值</strong>。空结点的的坡度是0。</p>\n\n<p><strong>整个树</strong>的坡度就是其所有节点的坡度之和。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre><strong>输入:</strong> \n         1\n       /   \\\n      2     3\n<strong>输出:</strong> 1\n<strong>解释:</strong> \n结点的坡度 2 : 0\n结点的坡度 3 : 0\n结点的坡度 1 : |2-3| = 1\n树的坡度 : 0 + 0 + 1 = 1\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>任何子树的结点的和不会超过32位整数的范围。</li>\n\t<li>坡度的值不会超过32位整数的范围。</li>\n</ol>\n", "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int findTilt(TreeNode* root) {\n            }\n};"}