{"title": "848. 字母移位", "level": "中等", "description": "<p>有一个由小写字母组成的字符串 <code>S</code>，和一个整数数组 <code>shifts</code>。</p>\n\n<p>我们将字母表中的下一个字母称为原字母的 <em>移位</em>（由于字母表是环绕的， <code>'z'</code>&nbsp;将会变成&nbsp;<code>'a'</code>）。</p>\n\n<p>例如·，<code>shift('a') = 'b'</code>，&nbsp;<code>shift('t') = 'u'</code>,， 以及&nbsp;<code>shift('z') = 'a'</code>。</p>\n\n<p>对于每个&nbsp;<code>shifts[i] = x</code>&nbsp;， 我们会将 <code>S</code>&nbsp;中的前&nbsp;<code>i+1</code>&nbsp;个字母移位&nbsp;<code>x</code>&nbsp;次。</p>\n\n<p>返回将所有这些移位都应用到 <code>S</code> 后最终得到的字符串。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>S = \"abc\", shifts = [3,5,9]\n<strong>输出：</strong>\"rpl\"\n<strong>解释： </strong>\n我们以 \"abc\" 开始。\n将 S 中的第 1 个字母移位 3 次后，我们得到 \"dbc\"。\n再将 S 中的前 2 个字母移位 5 次后，我们得到 \"igc\"。\n最后将 S 中的这 3 个字母移位 9 次后，我们得到答案 \"rpl\"。\n</pre>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length = shifts.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= shifts[i] &lt;= 10 ^ 9</code></li>\n</ol>\n", "code": "class Solution {\npublic:\n    string shiftingLetters(string S, vector<int>& shifts) {\n            }\n};"}