{"title": "676. 实现一个魔法字典", "level": "中等", "description": "<p>实现一个带有<code>buildDict</code>, 以及&nbsp;<code>search</code>方法的魔法字典。</p>\n\n<p>对于<code>buildDict</code>方法，你将被给定一串不重复的单词来构建一个字典。</p>\n\n<p>对于<code>search</code>方法，你将被给定一个单词，并且判定能否只将这个单词中<strong>一个</strong>字母换成另一个字母，使得所形成的新单词存在于你构建的字典中。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>Input: buildDict([\"hello\", \"leetcode\"]), Output: Null\nInput: search(\"hello\"), Output: False\nInput: search(\"hhllo\"), Output: True\nInput: search(\"hell\"), Output: False\nInput: search(\"leetcoded\"), Output: False\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li>你可以假设所有输入都是小写字母&nbsp;<code>a-z</code>。</li>\n\t<li>为了便于竞赛，测试所用的数据量很小。你可以在竞赛结束后，考虑更高效的算法。</li>\n\t<li>请记住<strong>重置</strong>MagicDictionary类中声明的类变量，因为静态/类变量会在多个测试用例中保留。 请参阅<a href=\"http://leetcode.com/faq/#different-output\">这里</a>了解更多详情。</li>\n</ol>\n", "code": ""}