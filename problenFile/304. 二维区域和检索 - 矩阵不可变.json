{"title": "304. 二维区域和检索 - 矩阵不可变", "level": "中等", "description": "<p>给定一个二维矩阵，计算其子矩形范围内元素的总和，该子矩阵的左上角为 (<em>row</em>1,&nbsp;<em>col</em>1) ，右下角为 (<em>row</em>2,&nbsp;<em>col</em>2)。</p>\n\n<p><img style=\"width: 130px;\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/images/304.png\" alt=\"Range Sum Query 2D\"><br>\n<small>上图子矩阵左上角&nbsp;(row1, col1) = <strong>(2, 1)</strong>&nbsp;，右下角(row2, col2) = <strong>(4, 3)，</strong>该子矩形内元素的总和为 8。</small></p>\n\n<p><strong>示例:</strong></p>\n\n<pre>给定 matrix = [\n  [3, 0, 1, 4, 2],\n  [5, 6, 3, 2, 1],\n  [1, 2, 0, 1, 5],\n  [4, 1, 0, 1, 7],\n  [1, 0, 3, 0, 5]\n]\n\nsumRegion(2, 1, 4, 3) -&gt; 8\nsumRegion(1, 1, 2, 2) -&gt; 11\nsumRegion(1, 2, 2, 4) -&gt; 12\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<ol>\n\t<li>你可以假设矩阵不可变。</li>\n\t<li>会多次调用&nbsp;<em>sumRegion&nbsp;</em>方法<em>。</em></li>\n\t<li>你可以假设&nbsp;<em>row</em>1 ≤ <em>row</em>2 且&nbsp;<em>col</em>1 ≤ <em>col</em>2。</li>\n</ol>\n", "code": "class NumMatrix {\npublic:\n    NumMatrix(vector<vector<int>>& matrix) {\n            }\n        int sumRegion(int row1, int col1, int row2, int col2) {\n            }\n};\n /**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix* obj = new NumMatrix(matrix);\n * int param_1 = obj->sumRegion(row1,col1,row2,col2);\n */"}