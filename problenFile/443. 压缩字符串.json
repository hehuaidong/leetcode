{"title": "443. 压缩字符串", "level": "简单", "description": "<p>给定一组字符，使用<a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\">原地算法</a>将其压缩。</p>\n\n<p>压缩后的长度必须始终小于或等于原数组长度。</p>\n\n<p>数组的每个元素应该是长度为1&nbsp;的<strong>字符</strong>（不是 int 整数类型）。</p>\n\n<p>在完成<a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\">原地</a><strong>修改输入数组</strong>后，返回数组的新长度。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong><br>\n你能否仅使用O(1) 空间解决问题？</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>\n[\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n\n<strong>输出：</strong>\n返回6，输入数组的前6个字符应该是：[\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n\n<strong>说明：</strong>\n\"aa\"被\"a2\"替代。\"bb\"被\"b2\"替代。\"ccc\"被\"c3\"替代。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>\n[\"a\"]\n\n<strong>输出：</strong>\n返回1，输入数组的前1个字符应该是：[\"a\"]\n\n<strong>说明：</strong>\n没有任何字符串被替代。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>\n[\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n\n<strong>输出：</strong>\n返回4，输入数组的前4个字符应该是：[\"a\",\"b\",\"1\",\"2\"]。\n\n<strong>说明：</strong>\n由于字符\"a\"不重复，所以不会被压缩。\"bbbbbbbbbbbb\"被“b12”替代。\n注意每个数字在数组中都有它自己的位置。\n</pre>\n\n<p><strong>注意：</strong></p>\n\n<ol>\n\t<li>所有字符都有一个ASCII值在<code>[35, 126]</code>区间内。</li>\n\t<li><code>1 &lt;= len(chars) &lt;= 1000</code>。</li>\n</ol>\n", "code": "class Solution {\npublic:\n    int compress(vector<char>& chars) {\n            }\n};"}