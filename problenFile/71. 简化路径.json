{"title": "71. 简化路径", "level": "中等", "description": "<p>以 Unix 风格给出一个文件的<strong>绝对路径</strong>，你需要简化它。或者换句话说，将其转换为规范路径。</p>\n\n<p>在 Unix 风格的文件系统中，一个点（<code>.</code>）表示当前目录本身；此外，两个点 （<code>..</code>）&nbsp;表示将目录切换到上一级（指向父目录）；两者都可以是复杂相对路径的组成部分。更多信息请参阅：<a href=\"https://blog.csdn.net/u011327334/article/details/50355600\">Linux / Unix中的绝对路径 vs 相对路径</a></p>\n\n<p>请注意，返回的规范路径必须始终以斜杠 <code>/</code> 开头，并且两个目录名之间必须只有一个斜杠 <code>/</code>。最后一个目录名（如果存在）<strong>不能</strong>以 <code>/</code> 结尾。此外，规范路径必须是表示绝对路径的<strong>最短</strong>字符串。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：\"</strong>/home/\"\n<strong>输出：\"</strong>/home\"\n<strong>解释：</strong>注意，最后一个目录名后面没有斜杠。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：\"</strong>/../\"\n<strong>输出：\"</strong>/\"\n<strong>解释：</strong>从根目录向上一级是不可行的，因为根是你可以到达的最高级。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：\"</strong>/home//foo/\"\n<strong>输出：\"</strong>/home/foo\"\n<strong>解释：</strong>在规范路径中，多个连续斜杠需要用一个斜杠替换。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：\"</strong>/a/./b/../../c/\"\n<strong>输出：\"</strong>/c\"\n</pre>\n\n<p><strong>示例 5：</strong></p>\n\n<pre><strong>输入：\"</strong>/a/../../b/../c//.//\"\n<strong>输出：\"</strong>/c\"\n</pre>\n\n<p><strong>示例 6：</strong></p>\n\n<pre><strong>输入：\"</strong>/a//b////c/d//././/..\"\n<strong>输出：\"</strong>/a/b/c\"</pre>\n", "code": "class Solution {\npublic:\n    string simplifyPath(string path) {\n            }\n};"}