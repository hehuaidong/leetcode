{"title": "738. 单调递增的数字", "level": "中等", "description": "<p>给定一个非负整数&nbsp;<code>N</code>，找出小于或等于&nbsp;<code>N</code>&nbsp;的最大的整数，同时这个整数需要满足其各个位数上的数字是单调递增。</p>\n\n<p>（当且仅当每个相邻位数上的数字&nbsp;<code>x</code>&nbsp;和&nbsp;<code>y</code>&nbsp;满足&nbsp;<code>x &lt;= y</code>&nbsp;时，我们称这个整数是单调递增的。）</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> N = 10\n<strong>输出:</strong> 9\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入:</strong> N = 1234\n<strong>输出:</strong> 1234\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入:</strong> N = 332\n<strong>输出:</strong> 299\n</pre>\n\n<p><strong>说明:</strong> <code>N</code>&nbsp;是在&nbsp;<code>[0, 10^9]</code>&nbsp;范围内的一个整数。</p>\n", "code": "class Solution {\npublic:\n    int monotoneIncreasingDigits(int N) {\n            }\n};"}