{"title": "211. 添加与搜索单词 - 数据结构设计", "level": "中等", "description": "<p>设计一个支持以下两种操作的数据结构：</p>\n\n<pre>void addWord(word)\nbool search(word)\n</pre>\n\n<p>search(word)&nbsp;可以搜索文字或正则表达式字符串，字符串只包含字母&nbsp;<code>.</code>&nbsp;或&nbsp;<code>a-z</code>&nbsp;。&nbsp;<code>.</code> 可以表示任何一个字母。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>addWord(\"bad\")\naddWord(\"dad\")\naddWord(\"mad\")\nsearch(\"pad\") -&gt; false\nsearch(\"bad\") -&gt; true\nsearch(\".ad\") -&gt; true\nsearch(\"b..\") -&gt; true\n</pre>\n\n<p><strong>说明:</strong></p>\n\n<p>你可以假设所有单词都是由小写字母 <code>a-z</code>&nbsp;组成的。</p>\n", "code": "class WordDictionary {\npublic:\n    /** Initialize your data structure here. */\n    WordDictionary() {\n            }\n        /** Adds a word into the data structure. */\n    void addWord(string word) {\n            }\n        /** Returns if the word is in the data structure. A word could contain the \ndot character '.' to represent any one letter. */\n    bool search(string word) {\n            }\n};\n /**\n * Your WordDictionary object will be instantiated and called as such:\n * WordDictionary* obj = new WordDictionary();\n * obj->addWord(word);"}