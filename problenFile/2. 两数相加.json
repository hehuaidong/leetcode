{"title": "2. 两数相加", "level": "中等", "description": "<p>给出两个&nbsp;<strong>非空</strong> 的链表用来表示两个非负的整数。其中，它们各自的位数是按照&nbsp;<strong>逆序</strong>&nbsp;的方式存储的，并且它们的每个节点只能存储&nbsp;<strong>一位</strong>&nbsp;数字。</p>\n\n<p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p>\n\n<p>您可以假设除了数字 0 之外，这两个数都不会以 0&nbsp;开头。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\n<strong>输出：</strong>7 -&gt; 0 -&gt; 8\n<strong>原因：</strong>342 + 465 = 807\n</pre>\n", "code": "/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n            }\n};"}