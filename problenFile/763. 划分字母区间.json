{"title": "763. 划分字母区间", "level": "中等", "description": "<p>字符串 <code>S</code> 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一个字母只会出现在其中的一个片段。返回一个表示每个字符串片段的长度的列表。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> S = \"ababcbacadefegdehijhklij\"\n<strong>输出:</strong> [9,7,8]\n<strong>解释:</strong>\n划分结果为 \"ababcbaca\", \"defegde\", \"hijhklij\"。\n每个字母最多出现在一个片段中。\n像 \"ababcbacadefegde\", \"hijhklij\" 的划分是错误的，因为划分的片段数较少。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>S</code>的长度在<code>[1, 500]</code>之间。</li>\n\t<li><code>S</code>只包含小写字母<code>'a'</code>到<code>'z'</code>。</li>\n</ol>\n", "code": "class Solution {\npublic:\n    vector<int> partitionLabels(string S) {\n            }\n};"}{"title": "763. 划分字母区间", "level": "中等", "description": "<p>字符串 <code>S</code> 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一个字母只会出现在其中的一个片段。返回一个表示每个字符串片段的长度的列表。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> S = \"ababcbacadefegdehijhklij\"\n<strong>输出:</strong> [9,7,8]\n<strong>解释:</strong>\n划分结果为 \"ababcbaca\", \"defegde\", \"hijhklij\"。\n每个字母最多出现在一个片段中。\n像 \"ababcbacadefegde\", \"hijhklij\" 的划分是错误的，因为划分的片段数较少。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>S</code>的长度在<code>[1, 500]</code>之间。</li>\n\t<li><code>S</code>只包含小写字母<code>'a'</code>到<code>'z'</code>。</li>\n</ol>\n", "code": "class Solution {\npublic:\n    vector<int> partitionLabels(string S) {\n            }\n};"}{"title": "763. 划分字母区间", "level": "中等", "description": "<p>字符串 <code>S</code> 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一个字母只会出现在其中的一个片段。返回一个表示每个字符串片段的长度的列表。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> S = \"ababcbacadefegdehijhklij\"\n<strong>输出:</strong> [9,7,8]\n<strong>解释:</strong>\n划分结果为 \"ababcbaca\", \"defegde\", \"hijhklij\"。\n每个字母最多出现在一个片段中。\n像 \"ababcbacadefegde\", \"hijhklij\" 的划分是错误的，因为划分的片段数较少。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>S</code>的长度在<code>[1, 500]</code>之间。</li>\n\t<li><code>S</code>只包含小写字母<code>'a'</code>到<code>'z'</code>。</li>\n</ol>\n", "code": "class Solution {\npublic:\n    vector<int> partitionLabels(string S) {\n            }\n};"}{"title": "763. 划分字母区间", "level": "中等", "description": "<p>字符串 <code>S</code> 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一个字母只会出现在其中的一个片段。返回一个表示每个字符串片段的长度的列表。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> S = \"ababcbacadefegdehijhklij\"\n<strong>输出:</strong> [9,7,8]\n<strong>解释:</strong>\n划分结果为 \"ababcbaca\", \"defegde\", \"hijhklij\"。\n每个字母最多出现在一个片段中。\n像 \"ababcbacadefegde\", \"hijhklij\" 的划分是错误的，因为划分的片段数较少。\n</pre>\n\n<p><strong>注意:</strong></p>\n\n<ol>\n\t<li><code>S</code>的长度在<code>[1, 500]</code>之间。</li>\n\t<li><code>S</code>只包含小写字母<code>'a'</code>到<code>'z'</code>。</li>\n</ol>\n", "code": "class Solution {\npublic:\n    vector<int> partitionLabels(string S) {\n            }\n};"}