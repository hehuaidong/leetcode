{"title": "931. 下降路径最小和", "level": "中等", "description": "<p>给定一个<strong>方形</strong>整数数组&nbsp;<code>A</code>，我们想要得到通过 <code>A</code> 的<em>下降路径</em>的<strong>最小</strong>和。</p>\n\n<p>下降路径可以从第一行中的任何元素开始，并从每一行中选择一个元素。在下一行选择的元素和当前行所选元素最多相隔一列。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[[1,2,3],[4,5,6],[7,8,9]]\n<strong>输出：</strong>12\n<strong>解释：</strong>\n可能的下降路径有：\n</pre>\n\n<ul>\n\t<li><code>[1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9]</code></li>\n\t<li><code>[2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9]</code></li>\n\t<li><code>[3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]</code></li>\n</ul>\n\n<p>和最小的下降路径是&nbsp;<code>[1,4,7]</code>，所以答案是&nbsp;<code>12</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length == A[0].length &lt;= 100</code></li>\n\t<li><code>-100 &lt;= A[i][j] &lt;= 100</code></li>\n</ol>\n", "code": "class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& A) {\n            }\n};"}