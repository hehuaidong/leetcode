{"title": "87. 扰乱字符串", "level": "困难", "description": "<p>给定一个字符串&nbsp;<em>s1</em>，我们可以把它递归地分割成两个非空子字符串，从而将其表示为二叉树。</p>\n\n<p>下图是字符串&nbsp;<em>s1</em>&nbsp;=&nbsp;<code>\"great\"</code>&nbsp;的一种可能的表示形式。</p>\n\n<pre>    great\n   /    \\\n  gr    eat\n / \\    /  \\\ng   r  e   at\n           / \\\n          a   t\n</pre>\n\n<p>在扰乱这个字符串的过程中，我们可以挑选任何一个非叶节点，然后交换它的两个子节点。</p>\n\n<p>例如，如果我们挑选非叶节点&nbsp;<code>\"gr\"</code>&nbsp;，交换它的两个子节点，将会产生扰乱字符串&nbsp;<code>\"rgeat\"</code>&nbsp;。</p>\n\n<pre>    rgeat\n   /    \\\n  rg    eat\n / \\    /  \\\nr   g  e   at\n           / \\\n          a   t\n</pre>\n\n<p>我们将&nbsp;<code>\"rgeat”</code>&nbsp;称作&nbsp;<code>\"great\"</code>&nbsp;的一个扰乱字符串。</p>\n\n<p>同样地，如果我们继续交换节点&nbsp;<code>\"eat\"</code>&nbsp;和&nbsp;<code>\"at\"</code>&nbsp;的子节点，将会产生另一个新的扰乱字符串&nbsp;<code>\"rgtae\"</code>&nbsp;。</p>\n\n<pre>    rgtae\n   /    \\\n  rg    tae\n / \\    /  \\\nr   g  ta  e\n       / \\\n      t   a\n</pre>\n\n<p>我们将&nbsp;<code>\"rgtae”</code>&nbsp;称作&nbsp;<code>\"great\"</code>&nbsp;的一个扰乱字符串。</p>\n\n<p>给出两个长度相等的字符串 <em>s1 </em>和&nbsp;<em>s2</em>，判断&nbsp;<em>s2&nbsp;</em>是否是&nbsp;<em>s1&nbsp;</em>的扰乱字符串。</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre><strong>输入:</strong> s1 = \"great\", s2 = \"rgeat\"\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> s1 = \"abcde\", s2 = \"caebd\"\n<strong>输出:</strong> false</pre>\n", "code": "class Solution {\npublic:\n    bool isScramble(string s1, string s2) {\n            }\n};"}