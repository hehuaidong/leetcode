{"title": "1029. 两地调度", "level": "简单", "description": "<p>公司计划面试 <code>2N</code> 人。第 <code>i</code> 人飞往 <code>A</code> 市的费用为 <code>costs[i][0]</code>，飞往 <code>B</code> 市的费用为 <code>costs[i][1]</code>。</p>\n\n<p>返回将每个人都飞到某座城市的最低费用，要求每个城市都有 <code>N</code> 人抵达<strong>。</strong></p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[[10,20],[30,200],[400,50],[30,20]]\n<strong>输出：</strong>110\n<strong>解释：</strong>\n第一个人去 A 市，费用为 10。\n第二个人去 A 市，费用为 30。\n第三个人去 B 市，费用为 50。\n第四个人去 B 市，费用为 20。\n\n最低总费用为 10 + 30 + 50 + 20 = 110，每个城市都有一半的人在面试。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= costs.length &lt;= 100</code></li>\n\t<li><code>costs.length</code> 为偶数</li>\n\t<li><code>1 &lt;= costs[i][0], costs[i][1] &lt;= 1000</code></li>\n</ol>\n", "code": "class Solution {\npublic:\n    int twoCitySchedCost(vector<vector<int>>& costs) {\n            }\n};"}