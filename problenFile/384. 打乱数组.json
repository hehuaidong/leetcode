{"title": "384. 打乱数组", "level": "中等", "description": "<p>打乱一个没有重复元素的数组。</p>\n\n<p><strong>示例:</strong></p>\n\n<pre>// 以数字集合 1, 2 和 3 初始化数组。\nint[] nums = {1,2,3};\nSolution solution = new Solution(nums);\n\n// 打乱数组 [1,2,3] 并返回结果。任何 [1,2,3]的排列返回的概率应该相同。\nsolution.shuffle();\n\n// 重设数组到它的初始状态[1,2,3]。\nsolution.reset();\n\n// 随机返回数组[1,2,3]打乱后的结果。\nsolution.shuffle();\n</pre>\n", "code": "class Solution {\npublic:\n    Solution(vector<int>& nums) {\n            }\n        /** Resets the array to its original configuration and return it. */\n    vector<int> reset() {\n            }\n        /** Returns a random shuffling of the array. */\n    vector<int> shuffle() {\n            }\n};\n /**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(nums);\n * vector<int> param_1 = obj->reset();\n * vector<int> param_2 = obj->shuffle();\n */"}