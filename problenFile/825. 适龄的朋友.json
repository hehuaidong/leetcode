{"title": "825. 适龄的朋友", "level": "中等", "description": "<p>人们会互相发送好友请求，现在给定一个包含有他们年龄的数组，<code>ages[i]</code>&nbsp;表示第 i 个人的年龄。</p>\n\n<p>当满足以下条件时，A 不能给 B（A、B不为同一人）发送好友请求：</p>\n\n<ul>\n\t<li><code>age[B]&nbsp;&lt;= 0.5 * age[A]&nbsp;+ 7</code></li>\n\t<li><code>age[B]&nbsp;&gt; age[A]</code></li>\n\t<li><code>age[B]&nbsp;&gt; 100 &amp;&amp;&nbsp;age[A]&nbsp;&lt; 100</code></li>\n</ul>\n\n<p>否则，A 可以给 B 发送好友请求。</p>\n\n<p>注意如果 A 向 B 发出了请求，不等于 B 也一定会向&nbsp;A 发出请求。而且，人们不会给自己发送好友请求。&nbsp;</p>\n\n<p>求总共会发出多少份好友请求?</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>[16,16]\n<strong>输出: </strong>2\n<strong>解释: 二人可以互发好友申请。</strong>\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入: </strong>[16,17,18]\n<strong>输出: </strong>2\n<strong>解释: 好友请求可产生于</strong> 17 -&gt; 16, 18 -&gt; 17.</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre><strong>输入: </strong>[20,30,100,110,120]\n<strong>输出: 3</strong>\n<strong>解释: 好友请求可产生于</strong> 110 -&gt; 100, 120 -&gt; 110, 120 -&gt; 100.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>说明:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= ages.length&nbsp;&lt;= 20000</code>.</li>\n\t<li><code>1 &lt;= ages[i] &lt;= 120</code>.</li>\n</ul>\n", "code": "class Solution {\npublic:\n    int numFriendRequests(vector<int>& ages) {\n            }\n};"}