{"title": "1003. 检查替换后的词是否有效", "level": "中等", "description": "<p>给定有效字符串&nbsp;<code>\"abc\"</code>。</p>\n\n<p>对于任何有效的字符串 <code>V</code>，我们可以将 <code>V</code> 分成两个部分 <code>X</code> 和 <code>Y</code>，使得 <code>X + Y</code>（<code>X</code> 与 <code>Y</code> 连接）等于 <code>V</code>。（<code>X</code>&nbsp;或 <code>Y</code> 可以为空。）那么，<code>X + \"abc\" + Y</code> 也同样是有效的。</p>\n\n<p>例如，如果 <code>S = \"abc\"</code>，则有效字符串的示例是：<code>\"abc\"</code>，<code>\"aabcbc\"</code>，<code>\"abcabc\"</code>，<code>\"abcabcababcc\"</code>。<strong>无效</strong>字符串的示例是：<code>\"abccba\"</code>，<code>\"ab\"</code>，<code>\"cababc\"</code>，<code>\"bac\"</code>。</p>\n\n<p>如果给定字符串 <code>S</code> 有效，则返回 <code>true</code>；否则，返回 <code>false</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>\"aabcbc\"\n<strong>输出：</strong>true\n<strong>解释：</strong>\n从有效字符串 \"abc\" 开始。\n然后我们可以在 \"a\" 和 \"bc\" 之间插入另一个 \"abc\"，产生 \"a\" + \"abc\" + \"bc\"，即 \"aabcbc\"。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>\"abcabcababcc\"\n<strong>输出：</strong>true\n<strong>解释：</strong>\n\"abcabcabc\" 是有效的，它可以视作在原串后连续插入 \"abc\"。\n然后我们可以在最后一个字母之前插入 \"abc\"，产生 \"abcabcab\" + \"abc\" + \"c\"，即 \"abcabcababcc\"。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>\"abccba\"\n<strong>输出：</strong>false\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>\"cababc\"\n<strong>输出：</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 20000</code></li>\n\t<li><code>S[i]</code> 为&nbsp;<code>'a'</code>、<code>'b'</code>、或&nbsp;<code>'c'</code></li>\n</ol>\n\n<p>&nbsp;</p>\n", "code": "class Solution {\npublic:\n    bool isValid(string S) {\n            }\n};"}