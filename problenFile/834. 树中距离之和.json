{"title": "834. 树中距离之和", "level": "困难", "description": "<p>给定一个无向、连通的树。树中有 <code>N</code> 个标记为 <code>0...N-1</code> 的节点以及 <code>N-1</code>&nbsp;条边&nbsp;。</p>\n\n<p>第 <code>i</code> 条边连接节点&nbsp;<code>edges[i][0]</code> 和 <code>edges[i][1]</code>&nbsp;。</p>\n\n<p>返回一个表示节点 <code>i</code> 与其他所有节点距离之和的列表 <code>ans</code>。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>N = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]\n<strong>输出: </strong>[8,12,6,10,10,10]\n<strong>解释: </strong>\n如下为给定的树的示意图：\n  0\n / \\\n1   2\n   /|\\\n  3 4 5\n\n我们可以计算出 dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5) \n也就是 1 + 1 + 2 + 2 + 2 = 8。 因此，answer[0] = 8，以此类推。\n</pre>\n\n<p><strong>说明:</strong>&nbsp;<code>1 &lt;= N &lt;= 10000</code></p>\n", "code": "class Solution {\npublic:\n    vector<int> sumOfDistancesInTree(int N, vector<vector<int>>& edges) {\n            }\n};"}