{"title": "530. 二叉搜索树的最小绝对差", "level": "简单", "description": "<p>给定一个所有节点为非负值的二叉搜索树，求树中任意两节点的差的绝对值的最小值。</p>\n\n<p><strong>示例 :</strong></p>\n\n<pre><strong>输入:</strong>\n\n   1\n    \\\n     3\n    /\n   2\n\n<strong>输出:</strong>\n1\n\n<strong>解释:\n</strong>最小绝对差为1，其中 2 和 1 的差的绝对值为 1（或者 2 和 3）。\n</pre>\n\n<p><strong>注意: </strong>树中至少有2个节点。</p>\n", "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int getMinimumDifference(TreeNode* root) {\n            }\n};"}