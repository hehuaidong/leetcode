{"title": "538. 把二叉搜索树转换为累加树", "level": "简单", "description": "<p>给定一个二叉搜索树（Binary Search Tree），把它转换成为累加树（Greater Tree)，使得每个节点的值是原来的节点值加上所有大于它的节点值之和。</p>\n\n<p><strong>例如：</strong></p>\n\n<pre><strong>输入:</strong> 二叉搜索树:\n              5\n            /   \\\n           2     13\n\n<strong>输出:</strong> 转换为累加树:\n             18\n            /   \\\n          20     13\n</pre>\n", "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* convertBST(TreeNode* root) {\n            }\n};"}