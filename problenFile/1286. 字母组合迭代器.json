{"title": "1286. 字母组合迭代器", "level": "中等", "description": "<p>请你设计一个迭代器类，包括以下内容：</p>\n\n<ul>\n\t<li>一个构造函数，输入参数包括：一个&nbsp;<strong>有序且字符唯一&nbsp;</strong>的字符串&nbsp;<code>characters</code>（该字符串只包含小写英文字母）和一个数字&nbsp;<code>combinationLength</code>&nbsp;。</li>\n\t<li>函数&nbsp;<em>next()&nbsp;</em>，按&nbsp;<strong>字典序&nbsp;</strong>返回长度为&nbsp;<code>combinationLength</code> 的下一个字母组合。</li>\n\t<li>函数&nbsp;<em>hasNext()&nbsp;</em>，只有存在长度为&nbsp;<code>combinationLength</code> 的下一个字母组合时，才返回&nbsp;<code>True</code>；否则，返回 <code>False</code>。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>CombinationIterator iterator = new CombinationIterator(\"abc\", 2); // 创建迭代器 iterator\n\niterator.next(); // 返回 \"ab\"\niterator.hasNext(); // 返回 true\niterator.next(); // 返回 \"ac\"\niterator.hasNext(); // 返回 true\niterator.next(); // 返回 \"bc\"\niterator.hasNext(); // 返回 false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= combinationLength &lt;=&nbsp;characters.length &lt;= 15</code></li>\n\t<li>每组测试数据最多包含&nbsp;<code>10^4</code>&nbsp;次函数调用。</li>\n\t<li>题目保证每次调用函数&nbsp;<code>next</code>&nbsp;时都存在下一个字母组合。</li>\n</ul>\n", "code": "class CombinationIterator {\npublic:\n    CombinationIterator(string characters, int combinationLength) {\n            }\n        string next() {\n            }\n        bool hasNext() {\n            }\n};\n /**\n * Your CombinationIterator object will be instantiated and called as such:\n * CombinationIterator* obj = new CombinationIterator(characters, \ncombinationLength);\n * string param_1 = obj->next();\n * bool param_2 = obj->hasNext();\n */"}