{"title": "677. 键值映射", "level": "中等", "description": "<p>实现一个 MapSum 类里的两个方法，<code>insert</code>&nbsp;和&nbsp;<code>sum</code>。</p>\n\n<p>对于方法&nbsp;<code>insert</code>，你将得到一对（字符串，整数）的键值对。字符串表示键，整数表示值。如果键已经存在，那么原来的键值对将被替代成新的键值对。</p>\n\n<p>对于方法 <code>sum</code>，你将得到一个表示前缀的字符串，你需要返回所有以该前缀开头的键的值的总和。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>输入: insert(\"apple\", 3), 输出: Null\n输入: sum(\"ap\"), 输出: 3\n输入: insert(\"app\", 2), 输出: Null\n输入: sum(\"ap\"), 输出: 5\n</pre>\n", "code": "class MapSum {\npublic:\n    /** Initialize your data structure here. */\n    MapSum() {\n            }\n        void insert(string key, int val) {\n            }\n        int sum(string prefix) {\n            }\n};\n /**\n * Your MapSum object will be instantiated and called as such:\n * MapSum* obj = new MapSum();\n * obj->insert(key,val);\n * int param_2 = obj->sum(prefix);\n */"}