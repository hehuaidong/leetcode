{"title": "209. 长度最小的子数组", "level": "中等", "description": "<p>给定一个含有&nbsp;<strong>n&nbsp;</strong>个正整数的数组和一个正整数&nbsp;<strong>s ，</strong>找出该数组中满足其和<strong> ≥ s </strong>的长度最小的连续子数组<strong>。</strong>如果不存在符合条件的连续子数组，返回 0。</p>\n\n<p><strong>示例:&nbsp;</strong></p>\n\n<pre><strong>输入:</strong> <code>s = 7, nums = [2,3,1,2,4,3]</code>\n<strong>输出:</strong> 2\n<strong>解释: </strong>子数组&nbsp;<code>[4,3]</code>&nbsp;是该条件下的长度最小的连续子数组。\n</pre>\n\n<p><strong>进阶:</strong></p>\n\n<p>如果你已经完成了<em>O</em>(<em>n</em>) 时间复杂度的解法, 请尝试&nbsp;<em>O</em>(<em>n</em> log <em>n</em>) 时间复杂度的解法。</p>\n", "code": "class Solution {\npublic:\n    int minSubArrayLen(int s, vector<int>& nums) {\n            }\n};"}