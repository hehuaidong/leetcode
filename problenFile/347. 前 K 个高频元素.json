{"title": "347. 前 K 个高频元素", "level": "中等", "description": "<p>给定一个非空的整数数组，返回其中出现频率前&nbsp;<strong><em>k&nbsp;</em></strong>高的元素。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入: </strong>nums = [1,1,1,2,2,3], k = 2\n<strong>输出: </strong>[1,2]\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre><strong>输入: </strong>nums = [1], k = 1\n<strong>输出: </strong>[1]</pre>\n\n<p><strong>说明：</strong></p>\n\n<ul>\n\t<li>你可以假设给定的&nbsp;<em>k&nbsp;</em>总是合理的，且 1 ≤ k ≤ 数组中不相同的元素的个数。</li>\n\t<li>你的算法的时间复杂度<strong>必须</strong>优于 O(<em>n</em> log <em>n</em>) ,&nbsp;<em>n&nbsp;</em>是数组的大小。</li>\n</ul>\n", "code": "class Solution {\npublic:\n    vector<int> topKFrequent(vector<int>& nums, int k) {\n            }\n};"}