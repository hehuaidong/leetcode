{"title": "969. 煎饼排序", "level": "中等", "description": "<p>给定数组&nbsp;<code>A</code>，我们可以对其进行<em>煎饼翻转</em>：我们选择一些正整数&nbsp;<code><strong>k</strong>&nbsp;&lt;= A.length</code>，然后反转 <code>A</code> 的前 <strong>k</strong>&nbsp;个元素的顺序。我们要执行零次或多次煎饼翻转（按顺序一次接一次地进行）以完成对数组 <code>A</code> 的排序。</p>\n\n<p>返回能使&nbsp;<code>A</code> 排序的煎饼翻转操作所对应的 k 值序列。任何将数组排序且翻转次数在&nbsp;<code>10 * A.length</code> 范围内的有效答案都将被判断为正确。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>[3,2,4,1]\n<strong>输出：</strong>[4,2,4,3]\n<strong>解释：</strong>\n我们执行 4 次煎饼翻转，k 值分别为 4，2，4，和 3。\n初始状态 A = [3, 2, 4, 1]\n第一次翻转后 (k=4): A = [1, 4, 2, 3]\n第二次翻转后 (k=2): A = [4, 1, 2, 3]\n第三次翻转后 (k=4): A = [3, 2, 1, 4]\n第四次翻转后 (k=3): A = [1, 2, 3, 4]，此时已完成排序。 \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>[1,2,3]\n<strong>输出：</strong>[]\n<strong>解释：\n</strong>输入已经排序，因此不需要翻转任何内容。\n请注意，其他可能的答案，如[3，3]，也将被接受。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>A[i]</code> 是&nbsp;<code>[1, 2, ..., A.length]</code>&nbsp;的排列</li>\n</ol>\n", "code": "class Solution {\npublic:\n    vector<int> pancakeSort(vector<int>& A) {\n            }\n};"}