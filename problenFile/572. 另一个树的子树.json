{"title": "572. 另一个树的子树", "level": "简单", "description": "<p>给定两个非空二叉树 <strong>s</strong> 和 <strong>t</strong>，检验&nbsp;<strong>s</strong> 中是否包含和 <strong>t</strong> 具有相同结构和节点值的子树。<strong>s</strong> 的一个子树包括 <strong>s</strong> 的一个节点和这个节点的所有子孙。<strong>s</strong> 也可以看做它自身的一棵子树。</p>\n\n<p><strong>示例 1:</strong><br>\n给定的树 s:</p>\n\n<pre>     3\n    / \\\n   4   5\n  / \\\n 1   2\n</pre>\n\n<p>给定的树 t：</p>\n\n<pre>   4 \n  / \\\n 1   2\n</pre>\n\n<p>返回 <strong>true</strong>，因为 t 与 s 的一个子树拥有相同的结构和节点值。</p>\n\n<p><strong>示例 2:</strong><br>\n给定的树 s：</p>\n\n<pre>     3\n    / \\\n   4   5\n  / \\\n 1   2\n    /\n   0\n</pre>\n\n<p>给定的树 t：</p>\n\n<pre>   4\n  / \\\n 1   2\n</pre>\n\n<p>返回 <strong>false</strong>。</p>\n", "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSubtree(TreeNode* s, TreeNode* t) {\n            }\n};"}