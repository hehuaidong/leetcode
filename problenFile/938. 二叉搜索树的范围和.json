{"title": "938. 二叉搜索树的范围和", "level": "简单", "description": "<p>给定二叉搜索树的根结点&nbsp;<code>root</code>，返回 <code>L</code> 和 <code>R</code>（含）之间的所有结点的值的和。</p>\n\n<p>二叉搜索树保证具有唯一的值。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>root = [10,5,15,3,7,null,18], L = 7, R = 15\n<strong>输出：</strong>32\n</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre><strong>输入：</strong>root = [10,5,15,3,7,13,18,1,null,6], L = 6, R = 10\n<strong>输出：</strong>23\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li>树中的结点数量最多为&nbsp;<code>10000</code>&nbsp;个。</li>\n\t<li>最终的答案保证小于&nbsp;<code>2^31</code>。</li>\n</ol>\n", "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int rangeSumBST(TreeNode* root, int L, int R) {\n            }\n};"}