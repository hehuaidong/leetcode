{"title": "33. 搜索旋转排序数组", "level": "中等", "description": "<p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。</p>\n\n<p>( 例如，数组&nbsp;<code>[0,1,2,4,5,6,7]</code>&nbsp;可能变为&nbsp;<code>[4,5,6,7,0,1,2]</code>&nbsp;)。</p>\n\n<p>搜索一个给定的目标值，如果数组中存在这个目标值，则返回它的索引，否则返回&nbsp;<code>-1</code>&nbsp;。</p>\n\n<p>你可以假设数组中不存在重复的元素。</p>\n\n<p>你的算法时间复杂度必须是&nbsp;<em>O</em>(log&nbsp;<em>n</em>) 级别。</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre><strong>输入:</strong> nums = [<code>4,5,6,7,0,1,2]</code>, target = 0\n<strong>输出:</strong> 4\n</pre>\n\n<p><strong>示例&nbsp;2:</strong></p>\n\n<pre><strong>输入:</strong> nums = [<code>4,5,6,7,0,1,2]</code>, target = 3\n<strong>输出:</strong> -1</pre>\n", "code": "class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n            }\n};"}