{"title": "1208. 尽可能使字符串相等", "level": "中等", "description": "<p>给你两个长度相同的字符串，<code>s</code> 和 <code>t</code>。</p>\n\n<p>将 <code>s</code>&nbsp;中的第&nbsp;<code>i</code>&nbsp;个字符变到&nbsp;<code>t</code>&nbsp;中的第 <code>i</code> 个字符需要&nbsp;<code>|s[i] - t[i]|</code>&nbsp;的开销（开销可能为 0），也就是两个字符的 ASCII 码值的差的绝对值。</p>\n\n<p>用于变更字符串的最大预算是&nbsp;<code>maxCost</code>。在转化字符串时，总开销应当小于等于该预算，这也意味着字符串的转化可能是不完全的。</p>\n\n<p>如果你可以将 <code>s</code> 的子字符串转化为它在 <code>t</code> 中对应的子字符串，则返回可以转化的最大长度。</p>\n\n<p>如果 <code>s</code> 中没有子字符串可以转化成 <code>t</code> 中对应的子字符串，则返回 <code>0</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>s = \"abcd\", t = \"bcdf\", cost = 3\n<strong>输出：</strong>3\n<strong>解释：</strong>s<strong> </strong>中的<strong> </strong>\"abc\" 可以变为 \"bcd\"。开销为 3，所以最大长度为 3。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>s = \"abcd\", t = \"cdef\", cost = 3\n<strong>输出：</strong>1\n<strong>解释：</strong>s 中的任一字符要想变成 t 中对应的字符，其开销都是 2。因此，最大长度为<code> 1。</code>\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>s = \"abcd\", t = \"acde\", cost = 0\n<strong>输出：</strong>1\n<strong>解释：</strong>你无法作出任何改动，所以最大长度为 1。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, t.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= maxCost &lt;= 10^6</code></li>\n\t<li><code>s</code> 和&nbsp;<code>t</code>&nbsp;都只含小写英文字母。</li>\n</ul>\n", "code": "class Solution {\npublic:\n    int equalSubstring(string s, string t, int maxCost) {\n            }\n};"}