{"title": "1048. 最长字符串链", "level": "中等", "description": "<p>给出一个单词列表，其中每个单词都由小写英文字母组成。</p>\n\n<p>如果我们可以在&nbsp;<code>word1</code>&nbsp;的任何地方添加一个字母使其变成&nbsp;<code>word2</code>，那么我们认为&nbsp;<code>word1</code>&nbsp;是&nbsp;<code>word2</code>&nbsp;的前身。例如，<code>\"abc\"</code>&nbsp;是&nbsp;<code>\"abac\"</code>&nbsp;的前身。</p>\n\n<p><strong>词链</strong>是单词&nbsp;<code>[word_1, word_2, ..., word_k]</code>&nbsp;组成的序列，<code>k &gt;= 1</code>，其中&nbsp;<code>word_1</code>&nbsp;是&nbsp;<code>word_2</code>&nbsp;的前身，<code>word_2</code>&nbsp;是&nbsp;<code>word_3</code>&nbsp;的前身，依此类推。</p>\n\n<p>从给定单词列表 <code>words</code> 中选择单词组成词链，返回词链的最长可能长度。<br>\n&nbsp;</p>\n\n<p><strong>示例：</strong></p>\n\n<pre><strong>输入：</strong>[\"a\",\"b\",\"ba\",\"bca\",\"bda\",\"bdca\"]\n<strong>输出：</strong>4\n<strong>解释：</strong>最长单词链之一为 \"a\",\"ba\",\"bda\",\"bdca\"。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 16</code></li>\n\t<li><code>words[i]</code>&nbsp;仅由小写英文字母组成。</li>\n</ol>\n\n<p>&nbsp;</p>\n", "code": "class Solution {\npublic:\n    int longestStrChain(vector<string>& words) {\n            }\n};"}